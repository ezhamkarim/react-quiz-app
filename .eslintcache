[{"/Users/runcloudhq/react-quiz-app/src/index.tsx":"1","/Users/runcloudhq/react-quiz-app/src/App.tsx":"2","/Users/runcloudhq/react-quiz-app/src/API.ts":"3","/Users/runcloudhq/react-quiz-app/src/utils.ts":"4","/Users/runcloudhq/react-quiz-app/src/components/QuestionCard.tsx":"5","/Users/runcloudhq/react-quiz-app/src/App.styles.ts":"6","/Users/runcloudhq/react-quiz-app/src/components/QuestionCard.styles.ts":"7"},{"size":200,"mtime":1609560678792,"results":"8","hashOfConfig":"9"},{"size":2894,"mtime":1609587322722,"results":"10","hashOfConfig":"9"},{"size":816,"mtime":1609573410742,"results":"11","hashOfConfig":"9"},{"size":88,"mtime":1609573069579,"results":"12","hashOfConfig":"9"},{"size":1174,"mtime":1609587312560,"results":"13","hashOfConfig":"9"},{"size":1368,"mtime":1609586122560,"results":"14","hashOfConfig":"9"},{"size":1060,"mtime":1609587137756,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tt19ay",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/runcloudhq/react-quiz-app/src/index.tsx",[],"/Users/runcloudhq/react-quiz-app/src/App.tsx",[],"/Users/runcloudhq/react-quiz-app/src/API.ts",["31"],"import { type } from \"os\";\nimport { shuffleArray } from \"./utils\";\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  question: string;\n  type: string;\n};\n\nexport type QuestionState = Question & { answer: string[] };\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\nexport const fetchQuizQuestions = async (\n  amount: number,\n  difficulty: Difficulty\n) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&type=multiple&difficulty=${difficulty}`;\n\n  const data = await (await fetch(endpoint)).json();\n  return data.results.map((questions: Question) => ({\n    ...questions,\n    answer: shuffleArray([\n      ...questions.incorrect_answers,\n      questions.correct_answer,\n    ]),\n  }));\n};\n","/Users/runcloudhq/react-quiz-app/src/utils.ts",[],"/Users/runcloudhq/react-quiz-app/src/components/QuestionCard.tsx",[],"/Users/runcloudhq/react-quiz-app/src/App.styles.ts",[],"/Users/runcloudhq/react-quiz-app/src/components/QuestionCard.styles.ts",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":10,"nodeType":"34","messageId":"35","endLine":1,"endColumn":14},"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar"]